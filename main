#include <stdio.h>
#include <stdlib.h>

int main()
{
    int level = 5;
    int param = 1;
    int stats = 0;

    printf("Level: %d\n", level);
    printf("Param: %d\n", param);
    printf("-- stats: %d\n", stats);

    return 0;
}

int strLen (char* str)
{
    int i;
    while (str[i] != '\0')
        i++;

    return i;
}

int lowerCase (char* str)
{
    int len = strLen(str);
    for (int i = 0; i < len; i++)
    {
        if ((str[i] >= 'a') && (str[i] <= 'z'))
        {
            return 0;
        }
    }
    return 1;
}

int upperCase (char* str)
{
    int len = strLen(str);
    for (int i = 0; i < len; i++)
    {
        if ((lowerCase(str)) && ((str[i] >= 'A') && (str[i] <= 'Z')))
        {
            return 0;
        }
    }
    return 1;
}

int digSym (char* str)
{
    int len = strLen(str);
    for (int i = 0; i < len; i++)
    {
        if ((upperCase(str)) && ((str[i] >= '0') && (str[i] <= '9')))
        {
            return 0;
        }
    }
    return 1;
}

int specSym (char* str)
{
    int len = strLen(str);
    for (int i = 0; i < len; i++)
    {
        if ((digSym(str)) && (((str[i] > 31) && (str[i] < 48)) || ((str[i] > 57) && (str[i] < 65)) || ((str[i] > 122) && (str[i] < 127))))
        {
            return 0;
        }
    }
    return 1;
}

int lvl_1 (char* str)
{
    int k = 0;
    int len = strLen(str);
    for (int i = 0; i < len; i++)
    {
        if (lowerCase(str))
        {
            k++;
        }
        if (upperCase(str))
        {
            k++;
        }
    }
    return k;
}

int lvl_2 (char* str)
{
    int len = strLen(str);
    for (int i = 0; i < len; i++)
    {
        if (lowerCase(str))
        {
            return 1;
        }
        if (upperCase(str))
        {
            return 2;
        }
        if (digSym(str))
        {
            return 3;
        }
        if (specSym(str))
        {
            return 4;
        }
    }
    return 0;
}

int strSecv (char* str)
{
    int len = strLen(str);
    char str2[100];
    char str3[100];
    char str4[100];
    for (int i = 0; i < len; i++)
    {
        str2[i] = str[i];
        str3[i] = str2[i];
        str4[i] = str3[i];
    }
    for (int i = 0; i < len; i++)
    {
        if (str[i] != str2[i])
        {
            return 2;
        }

        if ((str[i] != str2[i]) && (str2[i] != str3[i]))
        {
            return 3;
        }

        if ((str[i] != str2[i]) && (str2[i] != str3[i]) && (str3[i] != str4[i]))
        {
            return 4;
        }

    }

    return 0;
}

int lvl_3 (char* str)
{
    if (lvl_2(str) == 2)
    {
        if (strSecv(str) == 2)
            return 2;
    }
    if (lvl_2(str) == 3)
    {
        if (strSecv(str) == 3)
            return 2;
    }
    if (lvl_2(str) == 4)
    {
        if (strSecv(str) == 2)
            return 2;
    }
    return 0;
}

int strInp (char* str1, char* str2)
{
    if (strLen(str1) != strLen(str2))
        return 0;

    for (int i = 0; i<strLen(str1); i++)
    {
        if (str1[i] != str2[i])
            return 0;
    }
    return 1;
}

int convToInt (int* digits, char* str)
{
    int l = strLen(str);

    for (int i = 0; i < l; i++)
    {
        if ((str[i] < 48) || (str[i] > 57))
        {
            printf ("Cannot make a convertation from '\%s' to INTEGER", str);
            return 1;
        }
    }

    *digits = atoi(str);

    return 0;
}
